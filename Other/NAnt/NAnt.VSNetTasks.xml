<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAnt.VSNetTasks</name>
    </assembly>
    <members>
        <member name="T:NAnt.VSNet.Tasks.SolutionTask">
            <summary>
            Compiles VS.NET solutions (or sets of projects), automatically determining 
            project dependencies from inter-project references.
            </summary>
            <remarks>
            <para>
            This task will analyze each of the given .csproj or .vbproj files and
            build them in the proper order.  It supports reading solution files, as well
            as enterprise template projects.
            </para>
            <para>
            This task also supports the model of referencing projects by their
            output filenames, rather than referencing them inside the solution.  It will
            automatically detect the existance of a file reference and convert it to a 
            project reference.  For example, if project A references the file in the
            release output directory of project B, the solution task will automatically convert
            this to a project dependency on project B and will reference the appropriate configuration output
            directory at the final build time (ie: reference the debug version of B if the solution is built as debug).
            </para>
            </remarks>
            <example>
              <para>
              Compiles all of the projects in <c>test.sln</c>, in release mode, in 
              the proper order.
              </para>
              <code>
                <![CDATA[
            <solution configuration="release" solutionfile="test.sln" />
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in <c>projects.txt</c>, in the proper 
              order.
              </para>
              <code>
                <![CDATA[
            <solution configuration="release">
                <projects>
                    <includesList name="projects.txt" />
               </projects>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles projects A, B and C, using the output of project X as a 
              reference.
              </para>
              <code>
                <![CDATA[
            <solution configuration="release">
                <projects>
                    <includes name="A\A.csproj" />
                    <includes name="B\b.vbproj" />
                    <includes name="C\c.csproj" />
                </projects>
                <referenceprojects>
                    <includes name="X\x.csproj" />
                </referenceprojects>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in the solution except for project A.
              </para>
              <code>
                <![CDATA[
            <solution solutionfile="test.sln" configuration="release">
                <excludeprojects>
                    <includes name="A\A.csproj" />
                </excludeprojects>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in the solution mapping the specific project at
              http://localhost/A/A.csproj to c:\inetpub\wwwroot\A\A.csproj and any URLs under
              http://localhost/B/[remainder] to c:\other\B\[remainder].  This allows the build 
              to work without WebDAV.
              </para>
              <code>
                <![CDATA[
            <solution solutionfile="test.sln" configuration="release">
                <webmap>
                    <map url="http://localhost/A/A.csproj" path="c:\inetpub\wwwroot\A\A.csproj" />
                    <map url="http://localhost/B" path="c:\other\B" />
                </webmap>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in the solution placing compiled outputs 
              in <c>c:\temp</c>.</para>
              <code>
                <![CDATA[
            <solution solutionfile="test.sln" configuration="release" outputdir="c:\temp" />
                ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.VSNet.Tasks.SolutionTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Tasks.SolutionTask"/> class.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Tasks.SolutionTask.#cctor">
            <summary>
            Initializes the static collection of root registry keys under which 
            the <see cref="T:NAnt.VSNet.Tasks.SolutionTask"/> should looks for assembly folders.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.Projects">
            <summary>
            The projects to build.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.ReferenceProjects">
            <summary>
            The projects to scan, but not build.
            </summary>
            <remarks>
            These projects are used to resolve project references and are 
            generally external to the solution being built. References to 
            these project's output files are converted to use the appropriate 
            solution configuration at build time.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.SolutionFile">
            <summary>
            The name of the VS.NET solution file to build.
            </summary>
            <remarks>
            <para>
            The <see cref="P:NAnt.VSNet.Tasks.SolutionTask.Projects"/> can be used instead to supply a list 
            of Visual Studio.NET projects that should be built.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.Configuration">
            <summary>
            The name of the solution configuration to build.
            </summary>
            <remarks>
            <para>
            Generally <c>release</c> or <c>debug</c>.  Not case-sensitive.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.OutputDir">
            <summary>
            The directory where compiled targets will be placed.  This
            overrides path settings contained in the solution/project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.WebMaps">
            <summary>
            WebMap of URL's to project references.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.ExcludeProjects">
            <summary>
            Fileset of projects to exclude.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.AssemblyFolders">
            <summary>
            Set of folders where references are searched when not found in path 
            from project file (HintPath).
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.IncludeVSFolders">
            <summary>
            Includes Visual Studio search folders in reference search path.
            The default is <see langword="true" />.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.EnableWebDav">
            <summary>
            Allow the task to use WebDAV for retrieving/compiling the projects within solution.  Use of 
            <see cref="T:NAnt.VSNet.Types.WebMap"/> is preferred over WebDAV.  The default is <see langword="false"/>.
            </summary>
            <remarks>
                <para>WebDAV support requires permission changes to be made on your project server.  These changes may affect          
                the security of the server and should not be applied to a public installation.</para>
                <para>Consult your web server or the NAnt Wiki documentation for more information.</para>
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.DefaultAssemblyFolders">
            <summary>
            Set of folders where references are searched when not found in path 
            from project file (HintPath) or <see cref="P:NAnt.VSNet.Tasks.SolutionTask.AssemblyFolders"/>.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.AssemblyFolderRootKeys">
            <summary>
            Gets the collection of root registry keys under which the 
            <see cref="T:NAnt.VSNet.Tasks.SolutionTask"/> should looks for assembly folders.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.Types.WebMap">
            <summary>
            Represents a single mapping from URL project path to physical project 
            path.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.Url">
            <summary>
            Specifies the URL of the project file, or a URL fragment to match.
            </summary>
            <value>
            The URL of the project file or the URL fragment to match.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.Path">
            <summary>
            Specifies the actual path to the project file, or the path fragment to replace.
            </summary>
            <value>
            The actual path to the project file or the path fragment to replace the URL fragment with.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.CaseSensitive">
            <summary>
            Specifies whether the mapping is case-sensitive or not.
            </summary>
            <value>
            A boolean flag representing the case-sensitivity of the mapping.  Default is <see langword="true" />.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.IfDefined">
            <summary>
            Indicates if the URL of the project file should be mapped.
            </summary>
            <value>
            <see langword="true" /> if the URL of the project file should be 
            mapped; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.UnlessDefined">
            <summary>
            Indicates if the URL of the project file should not be mapped.
            </summary>
            <value>
            <see langword="true" /> if the URL of the project file should not 
            be mapped; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="T:NAnt.VSNet.Types.WebMapCollection">
            <summary>
            Contains a strongly typed collection of <see cref="T:NAnt.VSNet.Types.WebMap"/> 
            objects.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> class.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.#ctor(NAnt.VSNet.Types.WebMapCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> class
            with the specified <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> instance.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.#ctor(NAnt.VSNet.Types.WebMap[])">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> class
            with the specified array of <see cref="T:NAnt.VSNet.Types.WebMap"/> instances.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.FindBestMatch(System.String)">
            <summary>
            Find the best matching <see cref="T:NAnt.VSNet.Types.WebMap"/> for the given Uri.
            </summary>
            <param name="uri">The value to match against the <see cref="T:NAnt.VSNet.Types.WebMap"/> objects in the collection.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Add(NAnt.VSNet.Types.WebMap)">
            <summary>
            Adds a <see cref="T:NAnt.VSNet.Types.WebMap"/> to the end of the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to be added to the end of the collection.</param> 
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.AddRange(NAnt.VSNet.Types.WebMap[])">
            <summary>
            Adds the elements of a <see cref="T:NAnt.VSNet.Types.WebMap"/> array to the end of the collection.
            </summary>
            <param name="items">The array of <see cref="T:NAnt.VSNet.Types.WebMap"/> elements to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.AddRange(NAnt.VSNet.Types.WebMapCollection)">
            <summary>
            Adds the elements of a <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> to the end of the collection.
            </summary>
            <param name="items">The <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Contains(NAnt.VSNet.Types.WebMap)">
            <summary>
            Determines whether a <see cref="T:NAnt.VSNet.Types.WebMap"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to locate in the collection.</param> 
            <returns>
            <see langword="true"/> if <paramref name="item"/> is found in the 
            collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Contains(System.String)">
            <summary>
            Determines whether a <see cref="T:NAnt.VSNet.Types.WebMap"/> with the specified
            value is in the collection.
            </summary>
            <param name="value">The argument value to locate in the collection.</param> 
            <returns>
            <see langword="true"/> if a <see cref="T:NAnt.VSNet.Types.WebMap"/> with value 
            <paramref name="value"/> is found in the collection; otherwise, 
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.CopyTo(NAnt.VSNet.Types.WebMap[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.        
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param> 
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.IndexOf(NAnt.VSNet.Types.WebMap)">
            <summary>
            Retrieves the index of a specified <see cref="T:NAnt.VSNet.Types.WebMap"/> object in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> object for which the index is returned.</param> 
            <returns>
            The index of the specified <see cref="T:NAnt.VSNet.Types.WebMap"/>. If the <see cref="T:NAnt.VSNet.Types.WebMap"/> is not currently a member of the collection, it returns -1.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Insert(System.Int32,NAnt.VSNet.Types.WebMap)">
            <summary>
            Inserts a <see cref="T:NAnt.VSNet.Types.WebMap"/> into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to insert.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:NAnt.VSNet.Types.WebMapEnumerator"/> for the entire collection.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Remove(NAnt.VSNet.Types.WebMap)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to remove from the collection.</param>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMapCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMapCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NAnt.VSNet.Types.WebMap"/> with the specified value.
            </summary>
            <param name="value">The value of the <see cref="T:NAnt.VSNet.Types.WebMap"/> to get.</param>
        </member>
        <member name="T:NAnt.VSNet.Types.WebMapEnumerator">
            <summary>
            Enumerates the <see cref="T:NAnt.VSNet.Types.WebMap"/> elements of a <see cref="T:NAnt.VSNet.Types.WebMapCollection"/>.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapEnumerator.#ctor(NAnt.VSNet.Types.WebMapCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapEnumerator"/> class
            with the specified <see cref="T:NAnt.VSNet.Types.WebMapCollection"/>.
            </summary>
            <param name="arguments">The collection that should be enumerated.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <see langword="true" /> if the enumerator was successfully advanced 
            to the next element; <see langword="false" /> if the enumerator has 
            passed the end of the collection.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the 
            first element in the collection.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMapEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.ConfigurationBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.ConfigurationBase"/> 
            class.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ConfigurationBase.OutputDir">
            <summary>
            Gets the output directory.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ConfigurationBase.OutputPath">
            <summary>
            Gets the path for the output file.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ConfigurationSettings.ObjectDir">
            <summary>
            Get the directory in which compiled resource files will be stored
            for this configuration.
            </summary>
            <remarks>
            <para>
            This is a directory relative to the project directory named 
            <c>obj\&lt;configuration name&gt;</c>.
            </para>
            <para>
            <c>.resx</c> and <c>.licx</c> files will only be recompiled if the
            compiled resource files in the <see cref="P:NAnt.VSNet.ConfigurationSettings.ObjectDir"/> are not 
            uptodate.
            </para>
            </remarks>
        </member>
        <member name="T:NAnt.VSNet.ProjectBase">
            <summary>
            Base class for all project classes.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.ProjectBase.#ctor(NAnt.VSNet.Tasks.SolutionTask,System.CodeDom.Compiler.TempFileCollection,NAnt.Core.Util.GacCache,System.IO.DirectoryInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.ProjectBase"/> class.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.ProjectBase.Log(NAnt.Core.Level,System.String)">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to be logged.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.ProjectBase.Log(NAnt.Core.Level,System.String,System.Object[])">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to log, containing zero or more format items.</param>
            <param name="args">An <see cref="T:System.Object"/> array containing zero or more objects to format.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.Name">
            <summary>
            Gets the name of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.ProjectPath">
            <summary>
            Gets the path of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.Guid">
            <summary>
            Gets or sets the unique identifier of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.ProjectConfigurations">
            <summary>
            Gets a case-insensitive list of project configurations.
            </summary>
            <remarks>
            The key of the <see cref="T:System.Collections.Hashtable"/> is the name of the 
            configuration and the value is a <see cref="T:NAnt.VSNet.ConfigurationBase"/>
            instance.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.BuildConfigurations">
            <summary>
            Gets a list of project configurations that can be build.
            </summary>
            <remarks>
            <para>
            Project configurations that are not in this list do not need to be 
            compiled (unless the project was not loaded through a solution file).
            </para>
            <para>
            The key of the <see cref="T:System.Collections.Hashtable"/> is the name of the 
            configuration and the value is a <see cref="T:NAnt.VSNet.ConfigurationBase"/>
            instance.
            </para>
            </remarks>
        </member>
        <member name="F:NAnt.VSNet.Project._sourceFiles">
            <summary>
            Holds a case-insensitive list of source files.
            </summary>
            <remarks>
            The key of the <see cref="T:System.Collections.Hashtable"/> is the full path of the 
            source file and the value is <see langword="null"/>.
            </remarks>
        </member>
        <member name="F:NAnt.VSNet.Project._appConfigFile">
            <summary>
            If available, holds the application configuration file of the project, 
            which should be deployed to the output directory.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Project.Name">
            <summary>
            Gets the name of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Project.ProjectPath">
            <summary>
            Gets the path of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Project.Guid">
            <summary>
            Gets or sets the unique identifier of the VS.NET project.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.ProjectFactory">
            <summary>
            Factory class for VS.NET projects.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.ProjectFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.ProjectFactory"/>
            class.
            </summary>
        </member>
        <member name="F:NAnt.VSNet.ProjectFactory._cachedProjects">
            <summary>
            Holds a case-insensitive list of cached projects.
            </summary>
            <remarks>
            The key of the <see cref="T:System.Collections.Hashtable"/> is the path of the project
            file (for web projects this can be a URL) and the value is a 
            <see cref="T:NAnt.VSNet.Project"/> instance.
            </remarks>
        </member>
        <member name="F:NAnt.VSNet.ProjectFactory._cachedProjectGuids">
            <summary>
            Holds a case-insensitive list of cached project GUIDs.
            </summary>
            <remarks>
            The key of the <see cref="T:System.Collections.Hashtable"/> is the path of the project
            file (for web projects this can be a URL) and the value is the GUID
            of the project.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.ProjectSettings.GetProjectGuid(System.Xml.XmlElement)">
            <summary>
            Gets the project GUID from the given <see cref="T:System.Xml.XmlElement"/> 
            holding a <c>&lt;VisualStudioProject&gt;</c> node.
            </summary>
            <param name="elemRoot">The <c>&lt;VisualStudioProject&gt;</c> node from which the project GUID should be retrieved.</param>
            <returns>
            The project GUID from specified <c>&lt;VisualStudioProject&gt;</c> node.
            </returns>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.ProjectDirectory">
            <summary>
            Gets the directory in which the project file is located.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.ApplicationIcon">
            <summary>
            Gets the .ico file to use as application icon.
            </summary>
            <value>
            The .ico file to use as application icon, or <see langword="null" /> 
            if no application icon should be used.
            </value>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.AssemblyOriginatorKeyFile">
            <summary>
            Gets the key file to use to sign ActiveX/COM wrappers.
            </summary>
            <value>
            The path of the key file to use to sign ActiveX/COM wrappers, 
            relative to the project root directory, or <see langword="null" />
            if the wrapper assembly should not be signed.
            </value>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.RunPostBuildEvent">
            <summary>
            Designates when the <see cref="P:NAnt.VSNet.ProjectSettings.PostBuildEvent"/> command line should
            be run. Possible values are "OnBuildSuccess", "Always" or 
            "OnOutputUpdated".
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.PreBuildEvent">
            <summary>
            Contains commands to be run before a build takes place.
            </summary>
            <remarks>
            Valid commands are those in a .bat file. For more info see MSDN.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.PostBuildEvent">
            <summary>
            Contains commands to be ran after a build has taken place.
            </summary>
            <remarks>
            Valid commands are those in a .bat file. For more info see MSDN.
            </remarks>
        </member>
        <member name="T:NAnt.VSNet.Reference">
            <summary>
            Represents a reference to a project or assembly.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveAssemblyReference(System.Xml.XmlElement)">
            <summary>
            <para>
            Resolves an assembly reference.
            </para>
            </summary>
            <param name="referenceElement">The <see cref="T:System.Xml.XmlElement"/> of the assembly reference that should be resolved.</param>
            <remarks>
            <para>
            Visual Studio .NET uses the following search mechanism :
            </para>
            <list type="number">
                <item>
                    <term>
                        The project directory.
                    </term>
                </item>
                <item>
                    <term>
                        The directories specified in the "ReferencePath" property, 
                        which is stored in the .USER file.
                    </term>
                </item>
                <item>
                    <term>
                        The .NET Framework directory (see KB306149) 
                    </term>
                </item>
                <item>
                    <term>
                        <para>
                            The directories specified under the following registry 
                            keys:
                        </para>
                        <list type="bullet">
                            <item>
                                <term>
                                    HKLM\SOFTWARE\Microsoft\.NETFramework\AssemblyFolders
                                </term>
                            </item>
                            <item>
                                <term>
                                    HKCU\SOFTWARE\Microsoft\.NETFramework\AssemblyFolders
                                </term>
                            </item>
                            <item>
                                <term>
                                    HKLM\SOFTWARE\Microsoft\VisualStudio\&lt;major version&gt;.&lt;minor version&gt;\AssemblyFolders
                                </term>
                            </item>
                            <item>
                                <term>
                                    HKCU\SOFTWARE\Microsoft\VisualStudio\&lt;major version&gt;.&lt;minor version&gt;\AssemblyFolders
                                </term>
                            </item>
                        </list>
                        <para>
                            Future versions of Visual Studio .NET will also check 
                            in:
                        </para>
                        <list type="bullet">
                            <item>
                                <term>
                                    HKLM\SOFTWARE\Microsoft\.NETFramework\AssemblyFoldersEx
                                </term>
                            </item>
                            <item>
                                <term>
                                    HKCU\SOFTWARE\Microsoft\.NETFramework\AssemblyFoldersEx
                                </term>
                            </item>
                        </list>
                    </term>
                </item>
                <item>
                    <term>
                        The HintPath.
                    </term>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveFromFolderList(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Searches for the given file in all paths in <paramref name="folderList" />.
            </summary>
            <param name="folderList">The folders to search.</param>
            <param name="fileName">The file to search for.</param>
            <returns>
            <see langword="true" /> if <paramref name="fileName" /> was found
            in <paramref name="folderList" />.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveFromFramework">
            <summary>
            Resolves an assembly reference in the framework assembly directory
            of the target framework.
            </summary>
            <returns>
            <see langword="true" /> if the assembly could be located in the
            framework assembly directory; otherwise, see langword="false" />.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveFromHintPath(System.Xml.XmlElement)">
            <summary>
            Resolves an assembly reference in the directory pointed to by the 
            <c>HintPath</c> attribute of reference element.
            </summary>
            <returns>
            <see langword="true" /> if the assembly could be located in the
            <c>HintPath</c> directory; otherwise, see langword="false" />.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveFromPath(System.String)">
            <summary>
            Resolves an assembly reference using the specified file path.
            </summary>
            <returns>
            <see langword="true" /> if the assembly exists at the specified 
            location; otherwise, see langword="false" />.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Reference.GetTimestamp(System.String)">
            <summary>
            Returns the date and time the specified file was last written to.
            </summary>
            <param name="fileName">The file for which to obtain write date and time information.</param>
            <returns>
            A <see cref="T:System.DateTime"/> structure set to the date and time that 
            the specified file was last written to, or 
            <see cref="F:System.DateTime.MaxValue"/> if the specified file does not
            exist.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Reference.Log(NAnt.Core.Level,System.String)">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to be logged.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Reference.Log(NAnt.Core.Level,System.String,System.Object[])">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to log, containing zero or more format items.</param>
            <param name="args">An <see cref="T:System.Object"/> array containing zero or more objects to format.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Reference.CopyLocal">
            <summary>
            Gets a value indicating whether the output file(s) of this reference 
            should be copied locally.
            </summary>
            <value>
            <see langword="true" /> if the output file(s) of this reference 
            should be copied locally; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Reference.Name">
            <summary>
            Gets the name of the reference.
            </summary>
            <value>
            The name of the reference.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Reference.IsSystem">
            <summary>
            Gets a value indicating whether this reference represents a system 
            assembly.
            </summary>
            <value>
            <see langword="true" /> if this reference represents a system 
            assembly; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Reference.Project">
            <summary>
            Gets the project which is referenced by this <see cref="T:NAnt.VSNet.Reference"/>.
            </summary>
            <value>
            The project which is referenced by this <see cref="T:NAnt.VSNet.Reference"/>, or
            <see langword="null"/> if this is not a project reference.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Reference.IsProjectReference">
            <summary>
            Gets a value indicating whether this is a reference to another
            project.
            </summary>
            <value>
            <see langword="true" /> if this is a reference to another project;
            otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="M:NAnt.VSNet.Reference.ReferencesResolver.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for 
            this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/> used to control the lifetime 
            policy for this instance. This is the current lifetime service object 
            for this instance if one exists; otherwise, a new lifetime service 
            object initialized with a lease that will never time out.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Reference.ReferencesResolver.GetAssemblyFileName(System.String)">
            <summary>
            Gets the file name of the assembly with the given assembly name.
            </summary>
            <param name="assemblyName">The assembly name of the assembly of which the file name should be returned.</param>
            <returns>
            The file name of the assembly with the given assembly name.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Solution.GetProjectFileFromGuid(System.String)">
            <summary>
            Gets the project file of the project with the given unique identifier.
            </summary>
            <param name="projectGuid">The unique identifier of the project for which the project file should be retrieves.</param>
            <returns>
            The project file of the project with the given unique identifier.
            </returns>
            <exception cref="T:NAnt.Core.BuildException">No project with unique identifier <paramref name="projectGuid"/> could be located.</exception>
        </member>
        <member name="M:NAnt.VSNet.Solution.Log(NAnt.Core.Level,System.String)">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to be logged.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Solution.Log(NAnt.Core.Level,System.String,System.Object[])">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to log, containing zero or more format items.</param>
            <param name="args">An <see cref="T:System.Object"/> array containing zero or more objects to format.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Solution.LoadProjects(NAnt.Core.Util.GacCache)">
            <summary>
            Loads the projects from the file system and stores them in an 
            instance variable.
            </summary>
            <param name="gacCache"><see cref="T:NAnt.Core.Util.GacCache"/> instance to use to determine whether an assembly is located in the Global Assembly Cache.</param>
            <exception cref="T:NAnt.Core.BuildException">A project GUID in the solution file does not match the actual GUID of the project in the project file.</exception>
        </member>
        <member name="T:NAnt.VSNet.VcArgumentMap">
            <summary>
            A mapping from properties in the .vcproj file to command line arguments.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.VcArgumentMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.VcArgumentMap"/>
            class.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.VcConfiguration">
            <summary>
            A single build configuration for a Visual C++ project or for a specific
            file in the project.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.VcConfiguration.GetXmlAttributeValue(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the value of the specified attribute from the specified node.
            </summary>
            <param name="xmlNode">The node of which the attribute value should be retrieved.</param>
            <param name="attributeName">The attribute of which the value should be returned.</param>
            <returns>
            The value of the attribute with the specified name or <see langword="null" />
            if the attribute does not exist or has no value.
            </returns>
        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.CharacterSet">
            <summary>
            Tells the compiler which character set to use.
            </summary>        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.ManagedExtensions">
            <summary>
            Gets a value indicating whether Managed Extensions for C++ are 
            enabled.
            </summary>        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.Name">
            <summary>
            Gets the name of the configuration.
            </summary>            <value>            The name of the configuration.            </value>        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.PlatformName">
            <summary>
            Gets the platform that the configuration targets.
            </summary>
            <value>
            The platform targeted by the configuration.
            </value>
        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.IntermediateDir">
            <summary>
            Intermediate directory, specified relative to project directory.
            </summary>        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.Macros">
            <summary>
            Gets the collection of macros that can be expanded in configuration
            settings.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.VcProject">
            <summary>
            Visual C++ project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcProject.Name">
            <summary>
            Gets the name of the Visual C++ project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcProject.ProjectPath">
            <summary>
            Gets the path of the Visual C++ project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcProject.Guid">
            <summary>
            Gets or sets the unique identifier of the Visual C++ project.
            </summary>
        </member>
    </members>
</doc>
