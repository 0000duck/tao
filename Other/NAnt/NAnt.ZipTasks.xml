<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAnt.ZipTasks</name>
    </assembly>
    <members>
        <member name="T:NAnt.Zip.Tasks.UnZipTask">
            <summary>
            Extracts files from a zip file.
            </summary>
            <remarks>
              <para>Uses <see href="http://www.icsharpcode.net/OpenSource/SharpZipLib/">#ziplib</see> (SharpZipLib), an open source Zip/GZip library written entirely in C#.</para>
            </remarks>
            <example>
              <para>Extracts all the file from the zip, preserving the directory structure.</para>
              <code>
                <![CDATA[
            <unzip zipfile="backup.zip"/>
                ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.Zip.Tasks.UnZipTask.ExecuteTask">
            <summary>
            Extracts the files from the zip file.
            </summary>
        </member>
        <member name="M:NAnt.Zip.Tasks.UnZipTask.ExtractFile(System.IO.Stream,System.String,System.DateTime)">
            <summary>
            Extracts a file entry from the specified stream.
            </summary>
            <param name="inputStream">The <see cref="T:System.IO.Stream"/> containing the compressed entry.</param>
            <param name="entryName">The name of the entry including directory information.</param>
            <param name="entryDate">The date of the entry.</param>
            <exception cref="T:NAnt.Core.BuildException">
              <para>The destination directory for the entry could not be created.</para>
              <para>-or-</para>
              <para>The entry could not be extracted.</para>
            </exception>
            <remarks>
            We cannot rely on the fact that the directory entry of a given file
            is created before the file is extracted, so we should create the
            directory if it doesn't yet exist.
            </remarks>
        </member>
        <member name="M:NAnt.Zip.Tasks.UnZipTask.ExtractDirectory(System.IO.Stream,System.String,System.DateTime)">
            <summary>
            Extracts a directory entry from the specified stream.
            </summary>
            <param name="inputStream">The <see cref="T:System.IO.Stream"/> containing the directory entry.</param>
            <param name="entryName">The name of the directory entry.</param>
            <param name="entryDate">The date of the entry.</param>
            <exception cref="T:NAnt.Core.BuildException">
              <para>The destination directory for the entry could not be created.</para>
            </exception>
        </member>
        <member name="P:NAnt.Zip.Tasks.UnZipTask.ZipFile">
            <summary>
            The archive file to expand.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.UnZipTask.ToDirectory">
            <summary>
            The directory where the expanded files should be stored. The 
            default is the project base directory.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.UnZipTask.Overwrite">
            <summary>
            Overwrite files, even if they are newer than the corresponding 
            entries in the archive. The default is <see langword="true" />.
            </summary>
        </member>
        <member name="T:NAnt.Zip.Tasks.ZipTask">
            <summary>
            Creates a zip file from a specified fileset.
            </summary>
            <remarks>
              <para>Uses <see href="http://www.icsharpcode.net/OpenSource/SharpZipLib/">#ziplib</see> (SharpZipLib), an open source Zip/GZip library written entirely in C#.</para>
            </remarks>
            <example>
              <para>Zip all files in the subdirectory <c>build</c> to <c>backup.zip</c>.</para>
              <code>
                <![CDATA[
            <zip zipfile="backup.zip">
                <fileset basedir="build">
                    <include name="*.*" />
                </fileset>
            </zip>
                ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.Zip.Tasks.ZipTask.ExecuteTask">
            <summary>
            Creates the zip file.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.ZipTask.ZipFile">
            <summary>
            The zip file to create.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.ZipTask.Comment">
            <summary>
            The comment for the file.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.ZipTask.Stamp">
            <summary>
            An optional date/time stamp for the files.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.ZipTask.ZipLevel">
            <summary>
            Desired level of compression. Possible values are 0 (STORE only) 
            to 9 (highest). The default is <c>6</c>.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.ZipTask.IncludeEmptyDirs">
            <summary>
            Include empty directories in the generated zip file. The default is
            <see langword="false" />.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Tasks.ZipTask.ZipFileSet">
            <summary>
            The set of files to be included in the archive.
            </summary>
        </member>
        <member name="T:NAnt.Zip.Types.ZipFileSet">
            <summary>
            A <see cref="T:NAnt.Zip.Types.ZipFileSet"/> is a <see cref="T:NAnt.Core.Types.FileSet"/> with extra 
            attributes useful in the context of the <see cref="T:NAnt.Zip.Tasks.ZipTask"/>.
            </summary>
        </member>
        <member name="P:NAnt.Zip.Types.ZipFileSet.Prefix">
            <summary>
            The top level directory prefix. If set, all file and directory paths 
            in the fileset will have this value prepended. Can either be a single 
            directory name or a "/" separated path.
            </summary>
        </member>
    </members>
</doc>
